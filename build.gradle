//buildscript {
//	repositories {
//		maven {
//			url = uri("https://plugins.gradle.org/m2/")
//		}
//	}
//	dependencies {
//		classpath("gradle.plugin.com.gorylenko.gradle-git-properties:gradle-git-properties:2.2.3")
//	}
//}

plugins {
	id 'java'
	id 'java-library'
	id 'application'
	id 'maven-publish'
	id 'signing'
	id 'idea'
//	id 'com.gorylenko.gradle-git-properties'
	id 'jacoco'
	id 'org.springframework.boot' version '2.5.10'
//	id 'io.spring.dependency-management' version '1.0.8.RELEASE'
}

//apply "com.gorylenko.gradle-git-properties"
apply from: "$rootDir/version-commit.gradle"
apply plugin: 'io.spring.dependency-management'
version project_version
group project_group

sourceCompatibility = project_jdk
targetCompatibility = project_jdk
jar.enabled = true
mainClassName = 'io.github.rothschil.RothschilApplication'


// 默认不需要打可执行jar包
//bootJar {
//	enabled = false
//}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}
repositories {
//        maven {
//            allowInsecureProtocol true
//            url 'http://localhost:8081/repository/maven-public/'
//        }
	mavenLocal()
	mavenCentral()
}

dependencies {
	implementation('org.springframework.boot:spring-boot-starter')
	implementation("org.springframework.boot:spring-boot-starter-web")
	implementation 'org.springframework.boot:spring-boot-starter-aop'
	implementation "org.projectlombok:lombok:$lombokVersion"
	implementation "org.springframework.security:spring-security-core"
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
	annotationProcessor 'org.projectlombok:lombok'
	// Common工具类
	implementation 'org.apache.commons:commons-lang3:3.4'
	implementation 'org.apache.directory.studio:org.apache.commons.io:2.4'
	implementation group: 'org.apache.commons', name: 'commons-collections4', version: '4.4'
	implementation group: 'commons-collections', name: 'commons-collections', version: '3.2.2'
	implementation group: 'commons-net', name: 'commons-net', version: '3.9.0'
//	implementation group: 'io.netty', name: 'netty-all', version: '4.19'
	implementation group: 'com.google.guava', name: 'guava', version: '20.0'
	implementation 'com.github.ulisesbocchio:jasypt-spring-boot-starter:2.1.1'
	implementation 'cn.hutool:hutool-all:5.8.3'
	// alibaba 线程池
	implementation 'com.alibaba:transmittable-thread-local:2.14.2'
	// 持久化
//	implementation "mysql:mysql-connector-java:8.0.29"
//	implementation('com.baomidou:mybatis-plus-boot-starter:3.5.2'){
//		exclude(group:'mysql', module:'mysql-connector-java')
//	}
	implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:2.3.1'
	testImplementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter-test:2.3.1'
	// https://mvnrepository.com/artifact/org.postgresql/postgresql
	implementation group: 'org.postgresql', name: 'postgresql', version: '42.5.4'

	implementation group: 'p6spy', name: 'p6spy', version: '3.9.1'
	implementation group: 'com.google.code.findbugs', name: 'jsr305', version: '3.0.2'
	//JSON
	implementation group: 'com.alibaba', name: 'fastjson', version: '1.2.83'
	implementation group: 'com.google.code.gson', name: 'gson', version: '2.8.6'

	//日志转换
	implementation group: 'uk.org.lidalia', name: 'sysout-over-slf4j', version: '1.0.2'

	//sftp jsch
	implementation group: 'com.jcraft', name: 'jsch', version: '0.1.55'
	implementation group: 'org.apache.httpcomponents', name: 'httpclient', version: '4.5.13'
	testImplementation "org.springframework.boot:spring-boot-starter-test"
}

test {
	useJUnitPlatform()
}

jar {
	// 禁用档案后缀，处理 **-plain.jar
	archiveClassifier = ''
	/* 配置文件不打入jar包 */
	excludes = ["*.yml", "*.sh"]
}


//// 程序编译的任务编码
//tasks.withType(JavaCompile) {
//	options.encoding('UTF-8')
//}
//
//tasks.withType(Javadoc) {
//	options.addStringOption('Xdoclint:none', '-quiet')
//}
//
//
//// 删除所有输出目录
//task cleanBuildDir(type: Delete) {
//	delete "${projectDir}/build"
//	delete "${projectDir}/out"
//}
//
//task javaDoc(type: Javadoc) {
//	//  delete("javadoc/")
//	options.encoding = "UTF-8"
//	options.charSet = "UTF-8"
//	//保留 public 的方法
//	options.memberLevel = JavadocMemberLevel.PRIVATE
//	options.linkSource = true
//	options.links("http://docs.oracle.com/javase/8/docs/api/")
//	//是否保留作者
//	options.author = true
//	options.version = true
//	options.header = project.name
//	//是否生成树状结构
//	options.noTree = true
//	options.noIndex = true
//	options.noNavBar = true
//	options.addStringOption('Xdoclint:none', '-quiet')
//	options.addStringOption('encoding', 'UTF-8')
//	options.addStringOption('charSet', 'UTF-8')
//	//定义所有Java源代码
//	source = sourceSets.main.allJava
//	// destinationDir = file("javadoc/") //生成 javadoc 的目标目录
//	//报错不中断
//	failOnError = false
//}
//
////    configurations {
////        [apiElements, runtimeElements].each {
////            it.outgoing.artifacts.removeIf { it.buildDependencies.getDependencies(null).contains(jar) }
////            it.outgoing.artifact(bootJar)
////        }
////    }
//
//task javaDocJar(type: Jar, dependsOn: javaDoc) {
//	// 文件标记
//	archiveClassifier = "javadoc"
//	// 通过javaDocTask 找到目标路径
//	from javaDoc.destinationDir
//}
//
////自定义打包任务，继承Jar，并且依赖classes，最终编译才打包 dependsOn: [classes]
//task sourceTask(type: Jar, dependsOn: [classes]) {
//	//所有源码读取类型
//	from sourceSets.main.allSource
//	//定义文件后缀类型
////		classifier('sources')
//}
//
//
////最终打包任务操作，将所有任务放入build
//artifacts {
//	archives(sourceTask)
//	archives(javaDocJar)
//}

//publishing {
//	publications {
//		toSonaType(MavenPublication) {
//			groupId = "$project.group"
//			artifactId = "$project.name"
//			version = "$project.version"
//			from components.java
//			artifact bootJar
//			artifact sourceTask
//			artifact javaDocJar
//
//			pom {
//				name = "rothschil-common"
//				description = "Pippin, was a Hobbit of the Shire, and one of Frodo Baggins' youngest, but closest friends. He was a member of the Fellowship of the Ring and later became the thirty-second Thain of the Shire"
//				url = "https://github.com/rothschil/rothschil-common"
//
//				// 添加你的 git 仓库 信息
//				scm {
//					connection= "scm:git:https://github.com/rothschil/rothschil-common.git"
//					developerConnection= "scm:git:https://github.com/rothschil/rothschil-common.git"
//					url= "https://github.com/rothschil/rothschil-common"
//				}
//
//				licenses {
//					license {
//						name= "The Apache License, Version 2.0"
//						url= "http://www.apache.org/licenses/LICENSE-2.0.txt"
//					}
//				}
//				developers {
//					// 添加开发者描述
//					developer {
//						id= "rothschil"
//						name= "rothschil"
//						email= "wcngs@qq.com"
//					}
//				}
//			}
//		}
//	}
//	repositories {
//
//		maven {
//			name 'snapshot'
//			url 'https://s01.oss.sonatype.org/content/repositories/snapshots/'
//			credentials {
//				username(oss_name)
//				password(oss_password)
//			}
//		}
//
//		maven {
//			name 'release'
//			url 'https://s01.oss.sonatype.org/content/repositories/releases/'
//			credentials {
//				username(oss_name)
//				password(oss_password)
//			}
//		}
//	}
//}
//
//signing {
//	sign publishing.publications.toSonaType
//}

// 所有操作准备好触发该任务
gradle.taskGraph.whenReady {
	tasks.each {
		if (it.getName().contains('test')) {
			it.enabled(false)
		}
	}
}

import org.apache.tools.ant.filters.FixCrLfFilter
import org.apache.tools.ant.filters.ReplaceTokens

applicationDistribution.with {
	from("src/main/resources") {
		into "config"
		include "bootstrap.yml", "application.yml", "application-dev.yml", "application-prod.yml"
	}
	from("src/main/resources") {
		into "/"+project.name+"-"+project_version
		include "startup.sh", "stop.sh"
		/* 更换脚本中的变量 */
		filter(ReplaceTokens, tokens: [mainClassName: mainClassName])
		/* 更改脚本文件格式为unix */
		filter(FixCrLfFilter.class, eol: FixCrLfFilter.CrLf.newInstance("lf"))
	}
}
